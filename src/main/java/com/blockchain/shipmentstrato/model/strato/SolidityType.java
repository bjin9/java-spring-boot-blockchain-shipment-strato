/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.blockchain.shipmentstrato.model.strato.SolidityType;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents a soldity type
 */
@Schema(description = "Represents a soldity type")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class SolidityType {

  @JsonProperty("indexedTypeIndex")

  private Integer indexedTypeIndex = null;

  @JsonProperty("indexedTypeType")

  private SolidityType indexedTypeType = null;
  public SolidityType indexedTypeIndex(Integer indexedTypeIndex) {
    this.indexedTypeIndex = indexedTypeIndex;
    return this;
  }

  

  /**
  * Get indexedTypeIndex
  * minimum: -2147483648
  * maximum: 2147483647
  * @return indexedTypeIndex
  **/
  @Schema(required = true, description = "")
  public Integer getIndexedTypeIndex() {
    return indexedTypeIndex;
  }
  public void setIndexedTypeIndex(Integer indexedTypeIndex) {
    this.indexedTypeIndex = indexedTypeIndex;
  }
  public SolidityType indexedTypeType(SolidityType indexedTypeType) {
    this.indexedTypeType = indexedTypeType;
    return this;
  }

  

  /**
  * Get indexedTypeType
  * @return indexedTypeType
  **/
  @Schema(required = true, description = "")
  public SolidityType getIndexedTypeType() {
    return indexedTypeType;
  }
  public void setIndexedTypeType(SolidityType indexedTypeType) {
    this.indexedTypeType = indexedTypeType;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolidityType solidityType = (SolidityType) o;
    return Objects.equals(this.indexedTypeIndex, solidityType.indexedTypeIndex) &&
        Objects.equals(this.indexedTypeType, solidityType.indexedTypeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indexedTypeIndex, indexedTypeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolidityType {\n");
    
    sb.append("    indexedTypeIndex: ").append(toIndentedString(indexedTypeIndex)).append("\n");
    sb.append("    indexedTypeType: ").append(toIndentedString(indexedTypeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
