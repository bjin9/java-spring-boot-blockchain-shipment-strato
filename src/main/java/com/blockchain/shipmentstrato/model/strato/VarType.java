/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.blockchain.shipmentstrato.model.strato.SolidityType;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Represents a Solidity Variable
 */
@Schema(description = "Represents a Solidity Variable")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class VarType {

  @JsonProperty("varTypeAtBytes")

  private Integer varTypeAtBytes = null;

  @JsonProperty("varTypePublic")

  private Boolean varTypePublic = null;

  @JsonProperty("varTypeConstant")

  private Boolean varTypeConstant = null;

  @JsonProperty("varTypeInitialValue")

  private String varTypeInitialValue = null;

  @JsonProperty("varTypeType")

  private SolidityType varTypeType = null;
  public VarType varTypeAtBytes(Integer varTypeAtBytes) {
    this.varTypeAtBytes = varTypeAtBytes;
    return this;
  }

  

  /**
  * Get varTypeAtBytes
  * minimum: -2147483648
  * maximum: 2147483647
  * @return varTypeAtBytes
  **/
  @Schema(required = true, description = "")
  public Integer getVarTypeAtBytes() {
    return varTypeAtBytes;
  }
  public void setVarTypeAtBytes(Integer varTypeAtBytes) {
    this.varTypeAtBytes = varTypeAtBytes;
  }
  public VarType varTypePublic(Boolean varTypePublic) {
    this.varTypePublic = varTypePublic;
    return this;
  }

  

  /**
  * Get varTypePublic
  * @return varTypePublic
  **/
  @Schema(description = "")
  public Boolean isVarTypePublic() {
    return varTypePublic;
  }
  public void setVarTypePublic(Boolean varTypePublic) {
    this.varTypePublic = varTypePublic;
  }
  public VarType varTypeConstant(Boolean varTypeConstant) {
    this.varTypeConstant = varTypeConstant;
    return this;
  }

  

  /**
  * Get varTypeConstant
  * @return varTypeConstant
  **/
  @Schema(description = "")
  public Boolean isVarTypeConstant() {
    return varTypeConstant;
  }
  public void setVarTypeConstant(Boolean varTypeConstant) {
    this.varTypeConstant = varTypeConstant;
  }
  public VarType varTypeInitialValue(String varTypeInitialValue) {
    this.varTypeInitialValue = varTypeInitialValue;
    return this;
  }

  

  /**
  * Get varTypeInitialValue
  * @return varTypeInitialValue
  **/
  @Schema(description = "")
  public String getVarTypeInitialValue() {
    return varTypeInitialValue;
  }
  public void setVarTypeInitialValue(String varTypeInitialValue) {
    this.varTypeInitialValue = varTypeInitialValue;
  }
  public VarType varTypeType(SolidityType varTypeType) {
    this.varTypeType = varTypeType;
    return this;
  }

  

  /**
  * Get varTypeType
  * @return varTypeType
  **/
  @Schema(required = true, description = "")
  public SolidityType getVarTypeType() {
    return varTypeType;
  }
  public void setVarTypeType(SolidityType varTypeType) {
    this.varTypeType = varTypeType;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VarType varType = (VarType) o;
    return Objects.equals(this.varTypeAtBytes, varType.varTypeAtBytes) &&
        Objects.equals(this.varTypePublic, varType.varTypePublic) &&
        Objects.equals(this.varTypeConstant, varType.varTypeConstant) &&
        Objects.equals(this.varTypeInitialValue, varType.varTypeInitialValue) &&
        Objects.equals(this.varTypeType, varType.varTypeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(varTypeAtBytes, varTypePublic, varTypeConstant, varTypeInitialValue, varTypeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VarType {\n");
    
    sb.append("    varTypeAtBytes: ").append(toIndentedString(varTypeAtBytes)).append("\n");
    sb.append("    varTypePublic: ").append(toIndentedString(varTypePublic)).append("\n");
    sb.append("    varTypeConstant: ").append(toIndentedString(varTypeConstant)).append("\n");
    sb.append("    varTypeInitialValue: ").append(toIndentedString(varTypeInitialValue)).append("\n");
    sb.append("    varTypeType: ").append(toIndentedString(varTypeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
