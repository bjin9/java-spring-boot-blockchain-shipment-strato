/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.blockchain.shipmentstrato.model.strato.TransactionParameters;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Send ether from one account to another (value is in Wei)
 */
@Schema(description = "Send ether from one account to another (value is in Wei)")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class PostSendParameters {

  @JsonProperty("toAddress")

  private String toAddress = null;

  @JsonProperty("value")

  private Integer value = null;

  @JsonProperty("password")

  private String password = null;

  @JsonProperty("txParams")

  private TransactionParameters txParams = null;

  @JsonProperty("metadata")

  private Map<String, String> metadata = null;
  public PostSendParameters toAddress(String toAddress) {
    this.toAddress = toAddress;
    return this;
  }

  

  /**
  * Get toAddress
  * @return toAddress
  **/
  @Schema(required = true, description = "")
  public String getToAddress() {
    return toAddress;
  }
  public void setToAddress(String toAddress) {
    this.toAddress = toAddress;
  }
  public PostSendParameters value(Integer value) {
    this.value = value;
    return this;
  }

  

  /**
  * Get value
  * minimum: 0
  * @return value
  **/
  @Schema(required = true, description = "")
  public Integer getValue() {
    return value;
  }
  public void setValue(Integer value) {
    this.value = value;
  }
  public PostSendParameters password(String password) {
    this.password = password;
    return this;
  }

  

  /**
  * Get password
  * @return password
  **/
  @Schema(required = true, description = "")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  public PostSendParameters txParams(TransactionParameters txParams) {
    this.txParams = txParams;
    return this;
  }

  

  /**
  * Get txParams
  * @return txParams
  **/
  @Schema(description = "")
  public TransactionParameters getTxParams() {
    return txParams;
  }
  public void setTxParams(TransactionParameters txParams) {
    this.txParams = txParams;
  }
  public PostSendParameters metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  
  public PostSendParameters putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }
  /**
  * Get metadata
  * @return metadata
  **/
  @Schema(description = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }
  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSendParameters postSendParameters = (PostSendParameters) o;
    return Objects.equals(this.toAddress, postSendParameters.toAddress) &&
        Objects.equals(this.value, postSendParameters.value) &&
        Objects.equals(this.password, postSendParameters.password) &&
        Objects.equals(this.txParams, postSendParameters.txParams) &&
        Objects.equals(this.metadata, postSendParameters.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toAddress, value, password, txParams, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSendParameters {\n");
    
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    txParams: ").append(toIndentedString(txParams)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
