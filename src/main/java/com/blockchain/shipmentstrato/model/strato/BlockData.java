/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * BlockData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class BlockData {

  @JsonProperty("blockdataExtraData")

  private Integer blockdataExtraData = null;

  @JsonProperty("blockdataGasUsed")

  private Integer blockdataGasUsed = null;

  @JsonProperty("blockdataGasLimit")

  private Integer blockdataGasLimit = null;

  @JsonProperty("blockdataKind")

  private String blockdataKind = null;

  @JsonProperty("blockdataUnclesHash")

  private String blockdataUnclesHash = null;

  @JsonProperty("blockdataMixHash")

  private String blockdataMixHash = null;

  @JsonProperty("blockdataReceiptsRoot")

  private String blockdataReceiptsRoot = null;

  @JsonProperty("blockdataNumber")

  private Integer blockdataNumber = null;

  @JsonProperty("blockdataDifficulty")

  private Integer blockdataDifficulty = null;

  @JsonProperty("blockdataTimestamp")

  private String blockdataTimestamp = null;

  @JsonProperty("blockdataCoinbase")

  private String blockdataCoinbase = null;

  @JsonProperty("blockdataParentHash")

  private String blockdataParentHash = null;

  @JsonProperty("blockdataNonce")

  private Integer blockdataNonce = null;

  @JsonProperty("blockdataStateRoot")

  private String blockdataStateRoot = null;

  @JsonProperty("blockdataTransactionsRoot")

  private String blockdataTransactionsRoot = null;

  @JsonProperty("blockdataChainId")

  private String blockdataChainId = null;
  public BlockData blockdataExtraData(Integer blockdataExtraData) {
    this.blockdataExtraData = blockdataExtraData;
    return this;
  }

  

  /**
  * Get blockdataExtraData
  * minimum: 0
  * @return blockdataExtraData
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataExtraData() {
    return blockdataExtraData;
  }
  public void setBlockdataExtraData(Integer blockdataExtraData) {
    this.blockdataExtraData = blockdataExtraData;
  }
  public BlockData blockdataGasUsed(Integer blockdataGasUsed) {
    this.blockdataGasUsed = blockdataGasUsed;
    return this;
  }

  

  /**
  * Get blockdataGasUsed
  * minimum: 0
  * @return blockdataGasUsed
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataGasUsed() {
    return blockdataGasUsed;
  }
  public void setBlockdataGasUsed(Integer blockdataGasUsed) {
    this.blockdataGasUsed = blockdataGasUsed;
  }
  public BlockData blockdataGasLimit(Integer blockdataGasLimit) {
    this.blockdataGasLimit = blockdataGasLimit;
    return this;
  }

  

  /**
  * Get blockdataGasLimit
  * minimum: 0
  * @return blockdataGasLimit
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataGasLimit() {
    return blockdataGasLimit;
  }
  public void setBlockdataGasLimit(Integer blockdataGasLimit) {
    this.blockdataGasLimit = blockdataGasLimit;
  }
  public BlockData blockdataKind(String blockdataKind) {
    this.blockdataKind = blockdataKind;
    return this;
  }

  

  /**
  * Get blockdataKind
  * @return blockdataKind
  **/
  @Schema(required = true, description = "")
  public String getBlockdataKind() {
    return blockdataKind;
  }
  public void setBlockdataKind(String blockdataKind) {
    this.blockdataKind = blockdataKind;
  }
  public BlockData blockdataUnclesHash(String blockdataUnclesHash) {
    this.blockdataUnclesHash = blockdataUnclesHash;
    return this;
  }

  

  /**
  * Get blockdataUnclesHash
  * @return blockdataUnclesHash
  **/
  @Schema(required = true, description = "")
  public String getBlockdataUnclesHash() {
    return blockdataUnclesHash;
  }
  public void setBlockdataUnclesHash(String blockdataUnclesHash) {
    this.blockdataUnclesHash = blockdataUnclesHash;
  }
  public BlockData blockdataMixHash(String blockdataMixHash) {
    this.blockdataMixHash = blockdataMixHash;
    return this;
  }

  

  /**
  * Get blockdataMixHash
  * @return blockdataMixHash
  **/
  @Schema(required = true, description = "")
  public String getBlockdataMixHash() {
    return blockdataMixHash;
  }
  public void setBlockdataMixHash(String blockdataMixHash) {
    this.blockdataMixHash = blockdataMixHash;
  }
  public BlockData blockdataReceiptsRoot(String blockdataReceiptsRoot) {
    this.blockdataReceiptsRoot = blockdataReceiptsRoot;
    return this;
  }

  

  /**
  * Get blockdataReceiptsRoot
  * @return blockdataReceiptsRoot
  **/
  @Schema(required = true, description = "")
  public String getBlockdataReceiptsRoot() {
    return blockdataReceiptsRoot;
  }
  public void setBlockdataReceiptsRoot(String blockdataReceiptsRoot) {
    this.blockdataReceiptsRoot = blockdataReceiptsRoot;
  }
  public BlockData blockdataNumber(Integer blockdataNumber) {
    this.blockdataNumber = blockdataNumber;
    return this;
  }

  

  /**
  * Get blockdataNumber
  * minimum: 0
  * @return blockdataNumber
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataNumber() {
    return blockdataNumber;
  }
  public void setBlockdataNumber(Integer blockdataNumber) {
    this.blockdataNumber = blockdataNumber;
  }
  public BlockData blockdataDifficulty(Integer blockdataDifficulty) {
    this.blockdataDifficulty = blockdataDifficulty;
    return this;
  }

  

  /**
  * Get blockdataDifficulty
  * minimum: 0
  * @return blockdataDifficulty
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataDifficulty() {
    return blockdataDifficulty;
  }
  public void setBlockdataDifficulty(Integer blockdataDifficulty) {
    this.blockdataDifficulty = blockdataDifficulty;
  }
  public BlockData blockdataTimestamp(String blockdataTimestamp) {
    this.blockdataTimestamp = blockdataTimestamp;
    return this;
  }

  

  /**
  * Get blockdataTimestamp
  * @return blockdataTimestamp
  **/
  @Schema(required = true, description = "")
  public String getBlockdataTimestamp() {
    return blockdataTimestamp;
  }
  public void setBlockdataTimestamp(String blockdataTimestamp) {
    this.blockdataTimestamp = blockdataTimestamp;
  }
  public BlockData blockdataCoinbase(String blockdataCoinbase) {
    this.blockdataCoinbase = blockdataCoinbase;
    return this;
  }

  

  /**
  * Get blockdataCoinbase
  * @return blockdataCoinbase
  **/
  @Schema(required = true, description = "")
  public String getBlockdataCoinbase() {
    return blockdataCoinbase;
  }
  public void setBlockdataCoinbase(String blockdataCoinbase) {
    this.blockdataCoinbase = blockdataCoinbase;
  }
  public BlockData blockdataParentHash(String blockdataParentHash) {
    this.blockdataParentHash = blockdataParentHash;
    return this;
  }

  

  /**
  * Get blockdataParentHash
  * @return blockdataParentHash
  **/
  @Schema(required = true, description = "")
  public String getBlockdataParentHash() {
    return blockdataParentHash;
  }
  public void setBlockdataParentHash(String blockdataParentHash) {
    this.blockdataParentHash = blockdataParentHash;
  }
  public BlockData blockdataNonce(Integer blockdataNonce) {
    this.blockdataNonce = blockdataNonce;
    return this;
  }

  

  /**
  * Get blockdataNonce
  * minimum: 0
  * maximum: 384
  * @return blockdataNonce
  **/
  @Schema(required = true, description = "")
  public Integer getBlockdataNonce() {
    return blockdataNonce;
  }
  public void setBlockdataNonce(Integer blockdataNonce) {
    this.blockdataNonce = blockdataNonce;
  }
  public BlockData blockdataStateRoot(String blockdataStateRoot) {
    this.blockdataStateRoot = blockdataStateRoot;
    return this;
  }

  

  /**
  * Get blockdataStateRoot
  * @return blockdataStateRoot
  **/
  @Schema(required = true, description = "")
  public String getBlockdataStateRoot() {
    return blockdataStateRoot;
  }
  public void setBlockdataStateRoot(String blockdataStateRoot) {
    this.blockdataStateRoot = blockdataStateRoot;
  }
  public BlockData blockdataTransactionsRoot(String blockdataTransactionsRoot) {
    this.blockdataTransactionsRoot = blockdataTransactionsRoot;
    return this;
  }

  

  /**
  * Get blockdataTransactionsRoot
  * @return blockdataTransactionsRoot
  **/
  @Schema(required = true, description = "")
  public String getBlockdataTransactionsRoot() {
    return blockdataTransactionsRoot;
  }
  public void setBlockdataTransactionsRoot(String blockdataTransactionsRoot) {
    this.blockdataTransactionsRoot = blockdataTransactionsRoot;
  }
  public BlockData blockdataChainId(String blockdataChainId) {
    this.blockdataChainId = blockdataChainId;
    return this;
  }

  

  /**
  * Get blockdataChainId
  * @return blockdataChainId
  **/
  @Schema(description = "")
  public String getBlockdataChainId() {
    return blockdataChainId;
  }
  public void setBlockdataChainId(String blockdataChainId) {
    this.blockdataChainId = blockdataChainId;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockData blockData = (BlockData) o;
    return Objects.equals(this.blockdataExtraData, blockData.blockdataExtraData) &&
        Objects.equals(this.blockdataGasUsed, blockData.blockdataGasUsed) &&
        Objects.equals(this.blockdataGasLimit, blockData.blockdataGasLimit) &&
        Objects.equals(this.blockdataKind, blockData.blockdataKind) &&
        Objects.equals(this.blockdataUnclesHash, blockData.blockdataUnclesHash) &&
        Objects.equals(this.blockdataMixHash, blockData.blockdataMixHash) &&
        Objects.equals(this.blockdataReceiptsRoot, blockData.blockdataReceiptsRoot) &&
        Objects.equals(this.blockdataNumber, blockData.blockdataNumber) &&
        Objects.equals(this.blockdataDifficulty, blockData.blockdataDifficulty) &&
        Objects.equals(this.blockdataTimestamp, blockData.blockdataTimestamp) &&
        Objects.equals(this.blockdataCoinbase, blockData.blockdataCoinbase) &&
        Objects.equals(this.blockdataParentHash, blockData.blockdataParentHash) &&
        Objects.equals(this.blockdataNonce, blockData.blockdataNonce) &&
        Objects.equals(this.blockdataStateRoot, blockData.blockdataStateRoot) &&
        Objects.equals(this.blockdataTransactionsRoot, blockData.blockdataTransactionsRoot) &&
        Objects.equals(this.blockdataChainId, blockData.blockdataChainId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockdataExtraData, blockdataGasUsed, blockdataGasLimit, blockdataKind, blockdataUnclesHash, blockdataMixHash, blockdataReceiptsRoot, blockdataNumber, blockdataDifficulty, blockdataTimestamp, blockdataCoinbase, blockdataParentHash, blockdataNonce, blockdataStateRoot, blockdataTransactionsRoot, blockdataChainId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockData {\n");
    
    sb.append("    blockdataExtraData: ").append(toIndentedString(blockdataExtraData)).append("\n");
    sb.append("    blockdataGasUsed: ").append(toIndentedString(blockdataGasUsed)).append("\n");
    sb.append("    blockdataGasLimit: ").append(toIndentedString(blockdataGasLimit)).append("\n");
    sb.append("    blockdataKind: ").append(toIndentedString(blockdataKind)).append("\n");
    sb.append("    blockdataUnclesHash: ").append(toIndentedString(blockdataUnclesHash)).append("\n");
    sb.append("    blockdataMixHash: ").append(toIndentedString(blockdataMixHash)).append("\n");
    sb.append("    blockdataReceiptsRoot: ").append(toIndentedString(blockdataReceiptsRoot)).append("\n");
    sb.append("    blockdataNumber: ").append(toIndentedString(blockdataNumber)).append("\n");
    sb.append("    blockdataDifficulty: ").append(toIndentedString(blockdataDifficulty)).append("\n");
    sb.append("    blockdataTimestamp: ").append(toIndentedString(blockdataTimestamp)).append("\n");
    sb.append("    blockdataCoinbase: ").append(toIndentedString(blockdataCoinbase)).append("\n");
    sb.append("    blockdataParentHash: ").append(toIndentedString(blockdataParentHash)).append("\n");
    sb.append("    blockdataNonce: ").append(toIndentedString(blockdataNonce)).append("\n");
    sb.append("    blockdataStateRoot: ").append(toIndentedString(blockdataStateRoot)).append("\n");
    sb.append("    blockdataTransactionsRoot: ").append(toIndentedString(blockdataTransactionsRoot)).append("\n");
    sb.append("    blockdataChainId: ").append(toIndentedString(blockdataChainId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
