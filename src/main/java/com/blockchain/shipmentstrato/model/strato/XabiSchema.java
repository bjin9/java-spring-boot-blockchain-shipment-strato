/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.blockchain.shipmentstrato.model.strato.EventSchema;
import com.blockchain.shipmentstrato.model.strato.FunctionModifier;
import com.blockchain.shipmentstrato.model.strato.FunctionType;
import com.blockchain.shipmentstrato.model.strato.TypeDef;
import com.blockchain.shipmentstrato.model.strato.VarType;
import com.blockchain.shipmentstrato.model.strato.XabiKindSchema;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Xabi types
 */
@Schema(description = "Xabi types")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class XabiSchema {

  @JsonProperty("funcs")

  private Map<String, FunctionType> funcs = new HashMap<>();

  @JsonProperty("constr")

  private FunctionType constr = null;

  @JsonProperty("vars")

  private Map<String, VarType> vars = new HashMap<>();

  @JsonProperty("types")

  private Map<String, TypeDef> types = new HashMap<>();

  @JsonProperty("modifiers")

  private Map<String, FunctionModifier> modifiers = new HashMap<>();

  @JsonProperty("events")

  private Map<String, EventSchema> events = new HashMap<>();

  @JsonProperty("kind")

  private XabiKindSchema kind = null;

  @JsonProperty("using")

  private Map<String, String> using = new HashMap<>();
  public XabiSchema funcs(Map<String, FunctionType> funcs) {
    this.funcs = funcs;
    return this;
  }

  
  public XabiSchema putFuncsItem(String key, FunctionType funcsItem) {
    this.funcs.put(key, funcsItem);
    return this;
  }
  /**
  * Get funcs
  * @return funcs
  **/
  @Schema(required = true, description = "")
  public Map<String, FunctionType> getFuncs() {
    return funcs;
  }
  public void setFuncs(Map<String, FunctionType> funcs) {
    this.funcs = funcs;
  }
  public XabiSchema constr(FunctionType constr) {
    this.constr = constr;
    return this;
  }

  

  /**
  * Get constr
  * @return constr
  **/
  @Schema(description = "")
  public FunctionType getConstr() {
    return constr;
  }
  public void setConstr(FunctionType constr) {
    this.constr = constr;
  }
  public XabiSchema vars(Map<String, VarType> vars) {
    this.vars = vars;
    return this;
  }

  
  public XabiSchema putVarsItem(String key, VarType varsItem) {
    this.vars.put(key, varsItem);
    return this;
  }
  /**
  * Get vars
  * @return vars
  **/
  @Schema(required = true, description = "")
  public Map<String, VarType> getVars() {
    return vars;
  }
  public void setVars(Map<String, VarType> vars) {
    this.vars = vars;
  }
  public XabiSchema types(Map<String, TypeDef> types) {
    this.types = types;
    return this;
  }

  
  public XabiSchema putTypesItem(String key, TypeDef typesItem) {
    this.types.put(key, typesItem);
    return this;
  }
  /**
  * Get types
  * @return types
  **/
  @Schema(required = true, description = "")
  public Map<String, TypeDef> getTypes() {
    return types;
  }
  public void setTypes(Map<String, TypeDef> types) {
    this.types = types;
  }
  public XabiSchema modifiers(Map<String, FunctionModifier> modifiers) {
    this.modifiers = modifiers;
    return this;
  }

  
  public XabiSchema putModifiersItem(String key, FunctionModifier modifiersItem) {
    this.modifiers.put(key, modifiersItem);
    return this;
  }
  /**
  * Get modifiers
  * @return modifiers
  **/
  @Schema(required = true, description = "")
  public Map<String, FunctionModifier> getModifiers() {
    return modifiers;
  }
  public void setModifiers(Map<String, FunctionModifier> modifiers) {
    this.modifiers = modifiers;
  }
  public XabiSchema events(Map<String, EventSchema> events) {
    this.events = events;
    return this;
  }

  
  public XabiSchema putEventsItem(String key, EventSchema eventsItem) {
    this.events.put(key, eventsItem);
    return this;
  }
  /**
  * Get events
  * @return events
  **/
  @Schema(required = true, description = "")
  public Map<String, EventSchema> getEvents() {
    return events;
  }
  public void setEvents(Map<String, EventSchema> events) {
    this.events = events;
  }
  public XabiSchema kind(XabiKindSchema kind) {
    this.kind = kind;
    return this;
  }

  

  /**
  * Get kind
  * @return kind
  **/
  @Schema(required = true, description = "")
  public XabiKindSchema getKind() {
    return kind;
  }
  public void setKind(XabiKindSchema kind) {
    this.kind = kind;
  }
  public XabiSchema using(Map<String, String> using) {
    this.using = using;
    return this;
  }

  
  public XabiSchema putUsingItem(String key, String usingItem) {
    this.using.put(key, usingItem);
    return this;
  }
  /**
  * Get using
  * @return using
  **/
  @Schema(required = true, description = "")
  public Map<String, String> getUsing() {
    return using;
  }
  public void setUsing(Map<String, String> using) {
    this.using = using;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XabiSchema xabiSchema = (XabiSchema) o;
    return Objects.equals(this.funcs, xabiSchema.funcs) &&
        Objects.equals(this.constr, xabiSchema.constr) &&
        Objects.equals(this.vars, xabiSchema.vars) &&
        Objects.equals(this.types, xabiSchema.types) &&
        Objects.equals(this.modifiers, xabiSchema.modifiers) &&
        Objects.equals(this.events, xabiSchema.events) &&
        Objects.equals(this.kind, xabiSchema.kind) &&
        Objects.equals(this.using, xabiSchema.using);
  }

  @Override
  public int hashCode() {
    return Objects.hash(funcs, constr, vars, types, modifiers, events, kind, using);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XabiSchema {\n");
    
    sb.append("    funcs: ").append(toIndentedString(funcs)).append("\n");
    sb.append("    constr: ").append(toIndentedString(constr)).append("\n");
    sb.append("    vars: ").append(toIndentedString(vars)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    modifiers: ").append(toIndentedString(modifiers)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    using: ").append(toIndentedString(using)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
