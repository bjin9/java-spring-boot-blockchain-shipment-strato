/*
 * STRATO API
 * This Swagger interactive documentation makes STRATO API calls to OAuth-protected STRATO demo node. Click 'Authorize' to sign-in with the test account.
 *
 * OpenAPI spec version: 4.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.blockchain.shipmentstrato.model.strato;

import java.util.Objects;
import com.blockchain.shipmentstrato.model.strato.TransactionParameters;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * A contract in a list of to-upload contracts
 */
@Schema(description = "A contract in a list of to-upload contracts")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-01-07T11:36:15.752447+08:00[Asia/Shanghai]")public class UploadListContract {

  @JsonProperty("contractName")

  private String contractName = null;

  @JsonProperty("args")

  private Map<String, String> args = new HashMap<>();

  @JsonProperty("txParams")

  private TransactionParameters txParams = null;

  @JsonProperty("value")

  private Integer value = null;

  @JsonProperty("metadata")

  private Map<String, String> metadata = null;
  public UploadListContract contractName(String contractName) {
    this.contractName = contractName;
    return this;
  }

  

  /**
  * Get contractName
  * @return contractName
  **/
  @Schema(required = true, description = "")
  public String getContractName() {
    return contractName;
  }
  public void setContractName(String contractName) {
    this.contractName = contractName;
  }
  public UploadListContract args(Map<String, String> args) {
    this.args = args;
    return this;
  }

  
  public UploadListContract putArgsItem(String key, String argsItem) {
    this.args.put(key, argsItem);
    return this;
  }
  /**
  * Get args
  * @return args
  **/
  @Schema(required = true, description = "")
  public Map<String, String> getArgs() {
    return args;
  }
  public void setArgs(Map<String, String> args) {
    this.args = args;
  }
  public UploadListContract txParams(TransactionParameters txParams) {
    this.txParams = txParams;
    return this;
  }

  

  /**
  * Get txParams
  * @return txParams
  **/
  @Schema(description = "")
  public TransactionParameters getTxParams() {
    return txParams;
  }
  public void setTxParams(TransactionParameters txParams) {
    this.txParams = txParams;
  }
  public UploadListContract value(Integer value) {
    this.value = value;
    return this;
  }

  

  /**
  * Get value
  * minimum: 0
  * @return value
  **/
  @Schema(description = "")
  public Integer getValue() {
    return value;
  }
  public void setValue(Integer value) {
    this.value = value;
  }
  public UploadListContract metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  
  public UploadListContract putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }
  /**
  * Get metadata
  * @return metadata
  **/
  @Schema(description = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }
  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadListContract uploadListContract = (UploadListContract) o;
    return Objects.equals(this.contractName, uploadListContract.contractName) &&
        Objects.equals(this.args, uploadListContract.args) &&
        Objects.equals(this.txParams, uploadListContract.txParams) &&
        Objects.equals(this.value, uploadListContract.value) &&
        Objects.equals(this.metadata, uploadListContract.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractName, args, txParams, value, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadListContract {\n");
    
    sb.append("    contractName: ").append(toIndentedString(contractName)).append("\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    txParams: ").append(toIndentedString(txParams)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
