package com.blockchain.shipmentstrato.config;import feign.RequestInterceptor;import feign.codec.Encoder;import feign.form.FormEncoder;import org.springframework.beans.factory.annotation.Value;import org.springframework.cloud.security.oauth2.client.feign.OAuth2FeignRequestInterceptor;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.security.oauth2.client.DefaultOAuth2ClientContext;import org.springframework.security.oauth2.client.resource.OAuth2ProtectedResourceDetails;import org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails;import java.util.Arrays;@Configurationpublic class StratoOAuthClientConfig {    @Value("${strato.oauth2.client.accessTokenUri}")    private String accessTokenUri;    @Value("${strato.oauth2.client.clientId}")    private String clientId;    @Value("${strato.oauth2.client.clientSecret}")    private String clientSecret;    @Value("${strato.oauth2.client.grantType}")    private String grantType;    @Value("${strato.oauth2.client.scope}")    private String scope;    @Bean    RequestInterceptor oauth2FeignRequestInterceptor() {        return new OAuth2FeignRequestInterceptor(new DefaultOAuth2ClientContext(), resource()) ;    }    private OAuth2ProtectedResourceDetails resource() {        ClientCredentialsResourceDetails resourceDetails = new ClientCredentialsResourceDetails();        resourceDetails.setAccessTokenUri(accessTokenUri);        resourceDetails.setClientId(clientId);        resourceDetails.setClientSecret(clientSecret);        resourceDetails.setGrantType(grantType);        resourceDetails.setScope(Arrays.asList(scope));        return resourceDetails;    }    @Bean    public Encoder feignFormEncoder () {        return new FormEncoder();    }}